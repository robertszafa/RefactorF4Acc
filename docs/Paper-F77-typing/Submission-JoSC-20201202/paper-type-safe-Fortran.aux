\relax 
\providecommand\hyper@newdestlabel[2]{}
\@nameuse{bbl@beforestart}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{YAMAMOTO2014576}
\providecommand \oddpage@label [2]{}
\babel@aux{british}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}The enduring appeal of Fortran}{1}{subsection.1.1}\protected@file@percent }
\citation{tinetti2012fortran}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The monthly usage of the UK Archer supercomputer per programming language (July 2016)}}{2}{figure.1}\protected@file@percent }
\newlabel{fig:The-montly-usage}{{1}{2}{The monthly usage of the UK Archer supercomputer per programming language (July 2016)}{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Literature mentions of different revisions of Fortran using Google Scholar and ScienceDirect}}{3}{figure.2}\protected@file@percent }
\newlabel{fig:Literature-mentions-of}{{2}{3}{Literature mentions of different revisions of Fortran using Google Scholar and ScienceDirect}{figure.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Acceleration by offloading matters}{3}{subsection.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}The need for pure functions}{3}{subsection.1.3}\protected@file@percent }
\citation{milner1978theory}
\citation{ansi1978standard}
\citation{54403}
\citation{SCOTT1994201,MALEY1996167}
\citation{reid1999prescriptive}
\citation{contrastin2016units}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}The case for type safety}{4}{subsection.1.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}What is type safety}{4}{subsubsection.1.4.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.2}Type safety in Fortran}{4}{subsubsection.1.4.2}\protected@file@percent }
\citation{liao2010rose}
\citation{Orchard:2013:UFS:2541348.2541356}
\citation{overbey2005refactorings}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related work}{5}{section.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Formalisation of Fortran}{5}{subsection.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Source-to-source compilation and refactoring}{5}{subsection.2.2}\protected@file@percent }
\citation{pierce2002types}
\@writefile{toc}{\contentsline {section}{\numberline {3}Contribution}{6}{section.3}\protected@file@percent }
\newlabel{sec:Formal-analysis-of}{{4}{6}{Formal analysis of the type safety of normalised Fortran programs}{section.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Formal analysis of the type safety of normalised Fortran programs}{6}{section.4}\protected@file@percent }
\newlabel{subsec:Type-systems-concepts}{{4.1}{6}{Type systems concepts and notation}{subsection.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Type systems concepts and notation}{6}{subsection.4.1}\protected@file@percent }
\newlabel{subsec:The-definition-of}{{4.2}{7}{The definition of a pure function}{subsection.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}The definition of a pure function}{7}{subsection.4.2}\protected@file@percent }
\newlabel{subsec:Specification-of-FORTRAN}{{4.3}{8}{Specification of FORTRAN 77 data types}{subsection.4.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Specification of FORTRAN 77 data types}{8}{subsection.4.3}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Relationship between storage unit, kind and bytes for FORTRAN 77 types.}}{9}{table.1}\protected@file@percent }
\newlabel{tab:Relationship-between-storage}{{1}{9}{Relationship between storage unit, kind and bytes for FORTRAN 77 types}{table.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Formalising the FORTRAN 77 type system }{9}{subsection.4.4}\protected@file@percent }
\newlabel{alg:The-FORTRAN-77}{{1}{10}{Formalising the FORTRAN 77 type system}{definition.1}{}}
\newlabel{def:General-form-a}{{2}{10}{Formalising the FORTRAN 77 type system}{definition.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.1}Constants}{11}{subsubsection.4.4.1}\protected@file@percent }
\newlabel{alg:EBNF-for-numeric}{{3}{11}{Constants}{definition.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.2}Scalars}{11}{subsubsection.4.4.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.3}Arrays}{12}{subsubsection.4.4.3}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Array slicing}{12}{section*.1}\protected@file@percent }
\newlabel{exa:Array-Slicing}{{1}{12}{Array slicing}{example.1}{}}
\@writefile{toc}{\contentsline {paragraph}{Arrays as indices}{13}{section*.2}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Bounds checking}{13}{section*.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.4}Subroutines and Functions}{13}{subsubsection.4.4.4}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Higher-order functions}{14}{section*.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.5}Assignments}{15}{subsubsection.4.4.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.6}Expressions}{15}{subsubsection.4.4.6}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Polymorphic numeric operators}{15}{section*.5}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Polymorphic intrinsics }{16}{section*.6}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Expression type rule}{16}{section*.7}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.7}Type conversions for polymorphic operators }{17}{subsubsection.4.4.7}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.8}Type conversion of assignments}{18}{subsubsection.4.4.8}\protected@file@percent }
\newlabel{exa:Unsafe-coercion}{{3}{18}{Type conversion of assignments}{example.3}{}}
\newlabel{exa:Output-from-g77}{{4}{19}{Type conversion of assignments}{example.4}{}}
\newlabel{exa:Explicit-conversion}{{5}{19}{Type conversion of assignments}{example.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Conclusions regarding the type safety of the Fortran type system}{19}{subsection.4.5}\protected@file@percent }
\newlabel{sec:The-problem-for}{{5}{20}{The problem for type safety: loss of type information}{section.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}The problem for type safety: loss of type information }{20}{section.5}\protected@file@percent }
\newlabel{sec:Program-transformations-for}{{6}{20}{Program transformations for type safety}{section.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Program transformations for type safety}{20}{section.6}\protected@file@percent }
\newlabel{subsec:Transforming-Fortran-subroutines}{{6.1}{21}{Transforming side-effect-free Fortran subroutines into pure functions}{subsection.6.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Transforming side-effect-free Fortran subroutines into pure functions}{21}{subsection.6.1}\protected@file@percent }
\newlabel{alg:procs-to-pure-funcs}{{1}{21}{Transforming side-effect-free Fortran subroutines into pure functions}{algocfline.1}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Transforming a FORTRAN 77 procedure into a pure function}}{21}{algocf.1}\protected@file@percent }
\newlabel{subsec:INTENT-inference}{{6.2}{21}{Infering the I/O direction of procedure arguments}{subsection.6.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Infering the I/O direction of procedure arguments }{21}{subsection.6.2}\protected@file@percent }
\newlabel{alg:intent}{{2}{22}{Infering the I/O direction of procedure arguments}{algocfline.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Infering \textsf  {INTENT}}}{22}{algocf.2}\protected@file@percent }
\newlabel{alg:intent_leaf}{{3}{22}{Infering the I/O direction of procedure arguments}{algocfline.3}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Infering Intent for leaf subroutine}}{22}{algocf.3}\protected@file@percent }
\newlabel{alg:intent_statement}{{4}{23}{Infering the I/O direction of procedure arguments}{algocfline.4}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Infering Intent for leaf subroutine}}{23}{algocf.4}\protected@file@percent }
\newlabel{subsec:Explicit-typing}{{6.3}{23}{Transforming \textsf {IMPLICIT} typing into explicit typing}{subsection.6.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Transforming \textsf  {IMPLICIT} typing into explicit typing}{23}{subsection.6.3}\protected@file@percent }
\newlabel{subsec:Removal-of-COMMON}{{6.4}{23}{Transforming \textsf {COMMON} blocks into procedure arguments}{subsection.6.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}Transforming \textsf  {COMMON} blocks into procedure arguments}{23}{subsection.6.4}\protected@file@percent }
\newlabel{alg:implicit}{{5}{24}{Transforming \textsf {IMPLICIT} typing into explicit typing}{algocfline.5}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Removal of IMPLICIT typing rules}}{24}{algocf.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.4.1}Construct the \textsf  {COMMON} block chain}{24}{subsubsection.6.4.1}\protected@file@percent }
\newlabel{exa:COMMON-block-chain}{{7}{24}{Construct the \textsf {COMMON} block chain}{example.7}{}}
\newlabel{exa:Passing-arguments-through}{{8}{25}{Construct the \textsf {COMMON} block chain}{example.8}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.4.2}Associate \textsf  {COMMON} block variables in procedure calls with the caller}{25}{subsubsection.6.4.2}\protected@file@percent }
\newlabel{exa:Overlapping-sequences}{{9}{25}{Associate \textsf {COMMON} block variables in procedure calls with the caller}{example.9}{}}
\newlabel{alg:common_vars_to_args}{{6}{26}{Associate \textsf {COMMON} block variables in procedure calls with the caller}{algocfline.6}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces strategy for converting the \textsf  {COMMON} variables into dummy parameters is as follows}}{26}{algocf.6}\protected@file@percent }
\newlabel{alg:matching_up_common_seqs}{{7}{27}{Associate \textsf {COMMON} block variables in procedure calls with the caller}{algocfline.7}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {7}{\ignorespaces Matching up \textsf  {COMMON} block variables in a subroutine call}}{27}{algocf.7}\protected@file@percent }
\newlabel{subsec:Removal-of-EQUIVALENCE}{{6.5}{27}{Removal of \textsf {EQUIVALENCE} statements}{subsection.6.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5}Removal of \textsf  {EQUIVALENCE} statements}{27}{subsection.6.5}\protected@file@percent }
\newlabel{exa:Unsafe-equivalence}{{10}{28}{Removal of \textsf {EQUIVALENCE} statements}{example.10}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.5.1}Transitivity}{28}{subsubsection.6.5.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.5.2}Quadratic complexity}{28}{subsubsection.6.5.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.5.3}Overlapping ranges}{28}{subsubsection.6.5.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.5.4}Equivalence pairs}{29}{subsubsection.6.5.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6}Summary of program transformations}{29}{subsection.6.6}\protected@file@percent }
\newlabel{sec:Typechecking-COMMON-block}{{7}{29}{A novel type checking algorithm for \textsf {COMMON} blocks and \textsf {EQUIVALENCE} associations}{section.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7}A novel type checking algorithm for \textsf  {COMMON} blocks and \textsf  {EQUIVALENCE} associations}{29}{section.7}\protected@file@percent }
\newlabel{alg:create-equiv-pairs}{{8}{30}{Equivalence pairs}{algocfline.8}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {8}{\ignorespaces Creating \textsf  {EQUIVALENCE} pairs}}{30}{algocf.8}\protected@file@percent }
\newlabel{alg:remove-equiv}{{9}{31}{Equivalence pairs}{algocfline.9}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {9}{\ignorespaces Replacing \textsf  {EQUIVALENCE} statements with assignments}}{31}{algocf.9}\protected@file@percent }
\newlabel{alg:common_equiv_typechecking}{{10}{32}{A novel type checking algorithm for \textsf {COMMON} blocks and \textsf {EQUIVALENCE} associations}{algocfline.10}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {10}{\ignorespaces Type checking rules for variables in \textsf  {COMMON} and \textsf  {EQUIVALENCE} statements}}{32}{algocf.10}\protected@file@percent }
\citation{vanderbauwhede2018domain}
\@writefile{toc}{\contentsline {section}{\numberline {8}Conclusions }{33}{section.8}\protected@file@percent }
\newlabel{app:A1.-Run-time-size}{{8}{34}{A1. Run-time size checking for arrays slicing}{section*.9}{}}
\newlabel{app:A2.-Run-time-size}{{8}{34}{A2. Run-time size checking for arrays as indices}{section*.10}{}}
\newlabel{app:A3.-Run-time-Checking}{{8}{35}{A3. Run-time Checking of Higher-order Subroutines and Functions}{section*.11}{}}
\newlabel{exa:Unsafe-code-with}{{14}{35}{A3. Run-time Checking of Higher-order Subroutines and Functions}{example.14}{}}
\newlabel{exa:External-functions}{{15}{36}{A3. Run-time Checking of Higher-order Subroutines and Functions}{example.15}{}}
\newlabel{exa:Indexed-external-functions}{{16}{36}{A3. Run-time Checking of Higher-order Subroutines and Functions}{example.16}{}}
\bibstyle{spmpsci}
\bibdata{paper-type-safe-Fortran}
\bibcite{YAMAMOTO2014576}{1}
\newlabel{exa:Identifying-type-variants}{{17}{37}{A3. Run-time Checking of Higher-order Subroutines and Functions}{example.17}{}}
\newlabel{alg:hof_rt_typechecking}{{11}{38}{A3. Run-time Checking of Higher-order Subroutines and Functions}{algocfline.11}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {11}{\ignorespaces Run-time type checks for higher-order function calls}}{38}{algocf.11}\protected@file@percent }
\bibcite{ansi1978standard}{2}
\bibcite{54403}{3}
\bibcite{contrastin2016units}{4}
\bibcite{liao2010rose}{5}
\bibcite{MALEY1996167}{6}
\bibcite{milner1978theory}{7}
\bibcite{Orchard:2013:UFS:2541348.2541356}{8}
\bibcite{overbey2005refactorings}{9}
\bibcite{pierce2002types}{10}
\bibcite{reid1999prescriptive}{11}
\bibcite{SCOTT1994201}{12}
\bibcite{tinetti2012fortran}{13}
\bibcite{vanderbauwhede2018domain}{14}
